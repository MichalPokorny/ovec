#!/usr/bin/env ruby

require 'ovec'
require 'optparse'

options = {}

opts_parser = OptionParser.new do |opts|
	opts.banner = "Usage: ovec [options] [input file(s)]"

	opts.on("-o", "--output FILENAME", "Output filename (STDOUT is used if omitted)") do |filename|
		options[:output] = filename
	end

	opts.on("-d", "--[no-]debug", "Show debugging messages (on STDERR)") do |v|
		options[:debug] = v
	end

	opts.on_tail("-h", "--help", "Show this message") do
		puts opts
		exit
	end

	opts.on_tail("-v", "--version", "Show version") do
		puts Ovec::NAME_WITH_VERSION
		exit
	end
end

output_file = nil

begin
	opts_parser.parse!
	output_file = options[:output] ? File.open(options[:output], "w") : STDOUT
rescue OptionParser::ParseError => ex
	$stderr.puts "Invalid options: #{ex.message}"
	$stderr.puts opts_parser.help
	exit 1
rescue StandardError => ex
	$stderr.puts ex.message
	exit 1
end

# OptionParser#parse! changes ARGV, so ARGF works here.
content = ARGF.read

parser = Ovec::Parser.new(debug: options[:debug])
tree = parser.parse(content)

tm = Ovec::TexManipulator.new
tm.bind(tree)

tier = Ovec::Tier.new

tm.run_text_manipulator(tier)

output_file.puts tree.to_tex
output_file.close
